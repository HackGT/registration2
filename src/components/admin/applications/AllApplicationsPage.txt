// import {
//   Box,
//   Button,
//   ButtonGroup,
//   Container,
//   HStack,
//   Icon,
//   Input,
//   InputGroup,
//   InputLeftElement,
//   Stack,
//   Text,
//   useBreakpointValue,
//   useColorModeValue,
// } from "@chakra-ui/react";
// import useAxios from "axios-hooks";
// import * as React from "react";
// import { FiSearch } from "react-icons/fi";
// import AllApplicationsTable from "./AllApplicationsTable";

// import { MemberTable } from "./MemberTable";

// export const App = () => {
//   const isMobile = useBreakpointValue({ base: true, md: false });
//   const [searchQuery, setSearchQuery] = React.useState("");
//   const [{ data, loading, error }] = useAxios("https://registration.api.hexlabs.org/applications");

//   if (loading || error) {
//     return <div>Loading...</div>;
//   }

//   const handleSearchChange = (event: any) => {
//     setSearchQuery(event.target.value);
//   };

//   const tableData = data.filter((application: any) => {
//     // Check if userId or applicationId matches search
//     if (
//       application.userId.toLowerCase().includes(searchQuery) ||
//       application.id.toLowerCase().includes(searchQuery)
//     ) {
//       return true;
//     }

//     // If application doesn't have any other userInfo, return false
//     if (Object.keys(application.userInfo).length === 0) {
//       return false;
//     }

//     // Check if application name or email matches search
//     const name = `${application.userInfo?.name?.first} ${application.userInfo?.name?.last}`;
//     if (
//       name.toLowerCase().includes(searchQuery) ||
//       application.userInfo?.email.toLowerCase().includes(searchQuery)
//     ) {
//       return true;
//     }
//     return false;
//   });

//   return (
//     <Container py={{ base: "4", md: "8" }} px={{ base: "0", md: 8 }}>
//       <Box bg="bg-surface" boxShadow={{ base: "none", md: "sm" }}>
//         <Stack spacing="5">
//           <Box px={{ base: "4", md: "6" }} pt="5">
//             <Stack direction={{ base: "column", md: "row" }} justify="space-between">
//               <Text fontSize="lg" fontWeight="medium">
//                 Members
//               </Text>
//               <InputGroup maxW="xs">
//                 <InputLeftElement pointerEvents="none">
//                   <Icon as={FiSearch} color="muted" boxSize="5" />
//                 </InputLeftElement>
//                 <Input onChange={handleSearchChange} value={searchQuery} placeholder="Search" />
//               </InputGroup>
//             </Stack>
//           </Box>
//           <Box overflowX="auto">
//             <AllApplicationsTable data={tableData} />
//           </Box>
//           <Box px={{ base: "4", md: "6" }} pb="5">
//             <HStack spacing="3" justify="space-between">
//               {!isMobile && (
//                 <Text color="muted" fontSize="sm">
//                   Showing 1 to 5 of 42 results
//                 </Text>
//               )}
//               <ButtonGroup
//                 spacing="3"
//                 justifyContent="space-between"
//                 width={{ base: "full", md: "auto" }}
//                 variant="secondary"
//               >
//                 <Button>Previous</Button>
//                 <Button>Next</Button>
//               </ButtonGroup>
//             </HStack>
//           </Box>
//         </Stack>
//       </Box>
//     </Container>
//   );
// };
